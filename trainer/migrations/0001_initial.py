# Generated by Django 3.2.4 on 2021-06-10 04:05

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import nepali_datetime_field.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dss', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('course', '0001_initial'),
        ('location', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(max_length=255)),
                ('photo', models.ImageField(blank=True, default='images/trainer/default_trainer.png', null=True, upload_to='images/trainer/')),
                ('phone_number', models.CharField(help_text="Phone number must be entered in the format: '000-555555' or '9999999999'.", max_length=255, validators=[django.core.validators.RegexValidator(regex='^(9\\d{9}|0\\d{1,2}-\\d{6})$')])),
                ('email', models.EmailField(max_length=254)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Sexual Minority', 'Sexual Minority')], max_length=255)),
                ('marital_status', models.CharField(choices=[('Unmarried', 'Unmarried'), ('Married', 'Married'), ('Multimarried', 'Multimarried'), ('Widow', 'Widow'), ('Divorced', 'Divorced'), ('Separated', 'Separated')], max_length=255)),
                ('migration_status', models.CharField(choices=[('Internal Migrant', 'Internal Migrant'), ('Returnee', 'Returnee'), ('None', 'None')], max_length=255)),
                ('special_focus_group', models.CharField(choices=[('Halaiya', 'Halaiya'), ('Kamaiya', 'Kamaiya'), ('HIV Infected', 'HIV Infected'), ('Single Women', 'Single Women'), ('None', 'None')], max_length=255)),
                ('religion', models.CharField(choices=[('No Religion', 'No Religion'), ('Buddhism', 'Buddhism'), ('Christianity', 'Christianity'), ('Hinduism', 'Hinduism'), ('Jainism', 'Jainism'), ('Kiratism', 'Kiratism'), ('Sikhism', 'Sikhism'), ('Others', 'Others')], max_length=255)),
                ('ethnicity', models.CharField(choices=[('Khas/Chhetri', 'Khas/Chhetri'), ('Brahmin-Hill/Bahun', 'Brahmin-Hill/Bahun'), ('Magar', 'Magar'), ('Tharu', 'Tharu'), ('Tamang', 'Tamang'), ('Newar', 'Newar'), ('Kami', 'Kami'), ('Musalman/Nepali Muslims', 'Musalman/Nepali Muslims'), ('Yadav Yadav/Ahir', 'Yadav Yadav/Ahir'), ('Rai', 'Rai'), ('Gurung', 'Gurung'), ('Damai/Dholi', 'Damai/Dholi'), ('Thakuri\tKhas', 'Thakuri\tKhas'), ('Limbu', 'Limbu'), ('Sarki', 'Sarki'), ('Teli', 'Teli'), ('Chamar/Harijan/Ram', 'Chamar/Harijan/Ram'), ('Kushwaha', 'Kushwaha'), ('Musahar', 'Musahar'), ('Kurmi', 'Kurmi'), ('Sanyasi/Dasnami', 'Sanyasi/Dasnami'), ('Dhanuk', 'Dhanuk'), ('Kanu/Haluwai', 'Kanu/Haluwai'), ('Dusadh/Pasawan/Pasi', 'Dusadh/Pasawan/Pasi'), ('Mallaha', 'Mallaha'), ('Kewat', 'Kewat'), ('Kathabaniyan', 'Kathabaniyan'), ('Brahmin-Tarai', 'Brahmin-Tarai'), ('Kalwar', 'Kalwar'), ('Kanu', 'Kanu'), ('Kumal', 'Kumal'), ('Bhujel', 'Bhujel'), ('Hajam/Thakur', 'Hajam/Thakur'), ('Rajbanshi', 'Rajbanshi'), ('Sherpa', 'Sherpa'), ('Dhobi', 'Dhobi'), ('Tatma/Tatwa', 'Tatma/Tatwa'), ('Lohar', 'Lohar'), ('Khatwe', 'Khatwe'), ('Sudhi', 'Sudhi'), ('Danuwar', 'Danuwar'), ('Majhi', 'Majhi'), ('Barai', 'Barai'), ('Bin', 'Bin'), ('Nuniya', 'Nuniya'), ('Chepang', 'Chepang'), ('Sonar', 'Sonar'), ('Kumhar', 'Kumhar'), ('Sunwar', 'Sunwar'), ('Bantar/Sardar', 'Bantar/Sardar'), ('Kahar', 'Kahar'), ('Santhal', 'Santhal'), ('Marwadi', 'Marwadi'), ('Kayastha', 'Kayastha'), ('Rajput/Terai', 'Rajput/Terai'), ('Badi', 'Badi'), ('Jhangar/Uraon', 'Jhangar/Uraon'), ('Gangai', 'Gangai'), ('Lodh', 'Lodh'), ('Badhaee', 'Badhaee'), ('Thami', 'Thami'), ('Kulung', 'Kulung'), ('Bengali', 'Bengali'), ('Gaderi/Bhediyar/Gangajali', 'Gaderi/Bhediyar/Gangajali'), ('Dhimal', 'Dhimal'), ('Yakkha', 'Yakkha'), ('Ghale', 'Ghale'), ('Tajpuriya', 'Tajpuriya'), ('Khawas', 'Khawas'), ('Darai', 'Darai'), ('Mali', 'Mali'), ('Dhuniya', 'Dhuniya'), ('Pahari', 'Pahari'), ('Rajdhob', 'Rajdhob'), ('Bhote', 'Bhote'), ('Dom', 'Dom'), ('Thakali', 'Thakali'), ('Kori', 'Kori'), ('Chhantyal', 'Chhantyal'), ('Hyolmo', 'Hyolmo'), ('Bote', 'Bote'), ('Rajbhar', 'Rajbhar'), ('Brahmu/Baramo', 'Brahmu/Baramo'), ('Punjabi', 'Punjabi'), ('Nachhring', 'Nachhring'), ('Yamphu', 'Yamphu'), ('Gaine', 'Gaine'), ('Chamling', 'Chamling'), ('Athpahariya', 'Athpahariya'), ('Jirel', 'Jirel'), ('Dura', 'Dura'), ('Sarabaria', 'Sarabaria'), ('Meche', 'Meche'), ('Bantaba', 'Bantaba'), ('Raji', 'Raji'), ('Dolpo', 'Dolpo'), ('Halkhor', 'Halkhor'), ('Byansi/Sauka', 'Byansi/Sauka'), ('Amat', 'Amat'), ('Thulung', 'Thulung'), ('Lepcha', 'Lepcha'), ('Pathakatta/Kushwadia', 'Pathakatta/Kushwadia'), ('Mewahang', 'Mewahang'), ('Bahing', 'Bahing'), ('Natuwa', 'Natuwa'), ('Hayu', 'Hayu'), ('Dhankar/Dharikar', 'Dhankar/Dharikar'), ('Lhopa', 'Lhopa'), ('Munda', 'Munda'), ('Dev', 'Dev'), ('Dhandi', 'Dhandi'), ('Kamar', 'Kamar'), ('Kisan', 'Kisan'), ('Sampang', 'Sampang'), ('Koche', 'Koche'), ('Lhomi', 'Lhomi'), ('Khaling', 'Khaling'), ('Topkegola', 'Topkegola'), ('Chidimar', 'Chidimar'), ('Walung', 'Walung'), ('Lohorung', 'Lohorung'), ('Kalar', 'Kalar'), ('Raute', 'Raute'), ('Nurang', 'Nurang'), ('Kusunda', 'Kusunda'), ('Foreigners', 'Foreigners'), ('Others/Undefined', 'Others/Undefined')], max_length=255)),
                ('disability', models.CharField(choices=[('Hearing', 'Hearing'), ('Seeing', 'Seeing'), ('Movement', 'Movement'), ('Others', 'Others'), ('None', 'None')], max_length=255)),
                ('permanent_ward_number', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31), (32, 32)])),
                ('permanent_street_name', models.CharField(blank=True, max_length=255, null=True)),
                ('permanent_tole_name', models.CharField(blank=True, max_length=255, null=True)),
                ('permanent_house_number', models.PositiveIntegerField(blank=True, null=True)),
                ('permanent_phone_number', models.CharField(help_text="Phone number must be entered in the format: '000-555555' or '9999999999'.", max_length=255, validators=[django.core.validators.RegexValidator(regex='^(9\\d{9}|0\\d{1,2}-\\d{6})$')])),
                ('temporary_ward_number', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31), (32, 32)])),
                ('temporary_street_name', models.CharField(blank=True, max_length=255, null=True)),
                ('temporary_tole_name', models.CharField(blank=True, max_length=255, null=True)),
                ('temporary_house_number', models.PositiveIntegerField(blank=True, null=True)),
                ('temporary_phone_number', models.CharField(help_text="Phone number must be entered in the format: '000-555555' or '9999999999'.", max_length=255, validators=[django.core.validators.RegexValidator(regex='^(9\\d{9}|0\\d{1,2}-\\d{6})$')])),
                ('calendar', models.CharField(choices=[('BS', 'BS'), ('AD', 'AD')], max_length=255)),
                ('date_of_birth_BS', nepali_datetime_field.models.NepaliDateField(blank=True, help_text='Write in YYYY-MM-DD format', null=True)),
                ('date_of_joining_BS', nepali_datetime_field.models.NepaliDateField(blank=True, help_text='Write in YYYY-MM-DD format', null=True)),
                ('date_of_birth_AD', models.DateField(blank=True, null=True)),
                ('date_of_joining_AD', models.DateField(blank=True, null=True)),
                ('father_first_name', models.CharField(max_length=255)),
                ('father_middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('father_last_name', models.CharField(max_length=255)),
                ('father_occupation', models.CharField(max_length=255)),
                ('mother_first_name', models.CharField(max_length=255)),
                ('mother_middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('mother_last_name', models.CharField(max_length=255)),
                ('mother_occupation', models.CharField(max_length=255)),
                ('grandfather_first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('grandfather_middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('grandfather_last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('spouse_first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('spouse_middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('spouse_last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('citizenship_number', models.CharField(max_length=255)),
                ('citizenship_issued_date_BS', nepali_datetime_field.models.NepaliDateField(blank=True, help_text='Write in YYYY-MM-DD format', null=True)),
                ('citizenship_issued_date_AD', models.DateField(blank=True, null=True)),
                ('proof_of_identity', models.CharField(choices=[('Citizenship', 'Citizenship'), ('Passport', 'Passport'), ('Driving License', 'Driving License')], max_length=255)),
                ('front', models.FileField(upload_to='files/identity/front/')),
                ('back', models.FileField(upload_to='files/identity/back/')),
                ('post', models.CharField(blank=True, max_length=255, null=True)),
                ('citizenship_issued_district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainer_citizenship_issued_district', to='location.district')),
                ('courses', models.ManyToManyField(help_text='Press Ctrl to select many', to='course.Course')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('dss', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dss.dss')),
                ('permanent_district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainer_permanent_district', to='location.district')),
                ('permanent_municipality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainer_permanent_municipality', to='location.municipality')),
                ('permanent_province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainer_permanent_province', to='location.province')),
                ('temporary_district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainer_temporary_district', to='location.district')),
                ('temporary_municipality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainer_temporary_municipality', to='location.municipality')),
                ('temporary_province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainer_temporary_province', to='location.province')),
            ],
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(max_length=255)),
                ('field', models.CharField(max_length=255)),
                ('institute', models.CharField(max_length=255)),
                ('calendar', models.CharField(choices=[('BS', 'BS'), ('AD', 'AD')], max_length=255)),
                ('started_from_BS', nepali_datetime_field.models.NepaliDateField(blank=True, help_text='Write in YYYY-MM-DD format', null=True)),
                ('ended_on_BS', nepali_datetime_field.models.NepaliDateField(blank=True, help_text='Write in YYYY-MM-DD format', null=True)),
                ('started_from_AD', models.DateField(blank=True, null=True)),
                ('ended_on_AD', models.DateField(blank=True, null=True)),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainer.trainer')),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.CharField(max_length=255)),
                ('organization', models.CharField(max_length=255)),
                ('calendar', models.CharField(choices=[('BS', 'BS'), ('AD', 'AD')], max_length=255)),
                ('started_from_BS', nepali_datetime_field.models.NepaliDateField(blank=True, help_text='Write in YYYY-MM-DD format', null=True)),
                ('ended_on_BS', nepali_datetime_field.models.NepaliDateField(blank=True, help_text='Write in YYYY-MM-DD format', null=True)),
                ('started_from_AD', models.DateField(blank=True, null=True)),
                ('ended_on_AD', models.DateField(blank=True, null=True)),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainer.trainer')),
            ],
        ),
    ]
